{"ast":null,"code":"var _jsxFileName = \"/Users/samuelbehrens/Documents/WebProjects/poodl/client/src/CommentList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nvar CommentList = function CommentList(props) {\n  var commentNodes = props.data.map(function (comment) {\n    return React.createElement(Comment, {\n      author: comment.author,\n      key: comment._id,\n      id: comment._id,\n      timestamp: comment.updatedAt,\n      handleUpdateComment: props.handleUpdateComment,\n      handleDeleteComment: props.handleDeleteComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, comment.text);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, commentNodes);\n};\n\nCommentList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    author: PropTypes.string,\n    id: PropTypes.string,\n    text: PropTypes.string,\n    updatedAt: PropTypes.string\n  })),\n  handleDeleteComment: PropTypes.func.isRequired,\n  handleUpdateComment: PropTypes.func.isRequired\n};\nCommentList.defaultProps = {\n  data: []\n};\nexport default CommentList;","map":{"version":3,"sources":["/Users/samuelbehrens/Documents/WebProjects/poodl/client/src/CommentList.js"],"names":["React","PropTypes","Comment","CommentList","props","commentNodes","data","map","comment","author","_id","updatedAt","handleUpdateComment","handleDeleteComment","text","propTypes","arrayOf","shape","string","id","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,MAAMC,YAAY,GAAGD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAe,UAAAC,OAAO;AAAA,WACzC,oBAAC,OAAD;AACE,MAAA,MAAM,EAAEA,OAAO,CAACC,MADlB;AAEE,MAAA,GAAG,EAAED,OAAO,CAACE,GAFf;AAGE,MAAA,EAAE,EAAEF,OAAO,CAACE,GAHd;AAIE,MAAA,SAAS,EAAEF,OAAO,CAACG,SAJrB;AAKE,MAAA,mBAAmB,EAAEP,KAAK,CAACQ,mBAL7B;AAME,MAAA,mBAAmB,EAAER,KAAK,CAACS,mBAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQIL,OAAO,CAACM,IARZ,CADyC;AAAA,GAAtB,CAArB;AAYA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIT,YADJ,CADF;AAKD,CAlBD;;AAoBAF,WAAW,CAACY,SAAZ,GAAwB;AACtBT,EAAAA,IAAI,EAAEL,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,KAAV,CAAgB;AACtCR,IAAAA,MAAM,EAAER,SAAS,CAACiB,MADoB;AAEtCC,IAAAA,EAAE,EAAElB,SAAS,CAACiB,MAFwB;AAGtCJ,IAAAA,IAAI,EAAEb,SAAS,CAACiB,MAHsB;AAItCP,IAAAA,SAAS,EAAEV,SAAS,CAACiB;AAJiB,GAAhB,CAAlB,CADgB;AAOtBL,EAAAA,mBAAmB,EAAEZ,SAAS,CAACmB,IAAV,CAAeC,UAPd;AAQtBT,EAAAA,mBAAmB,EAAEX,SAAS,CAACmB,IAAV,CAAeC;AARd,CAAxB;AAWAlB,WAAW,CAACmB,YAAZ,GAA2B;AACzBhB,EAAAA,IAAI,EAAE;AADmB,CAA3B;AAIA,eAAeH,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = (props) => {\n  const commentNodes = props.data.map(comment => (\n    <Comment\n      author={comment.author}\n      key={comment._id}\n      id={comment._id}\n      timestamp={comment.updatedAt}\n      handleUpdateComment={props.handleUpdateComment}\n      handleDeleteComment={props.handleDeleteComment}\n    >\n      { comment.text}\n    </Comment>\n  ));\n  return (\n    <div>\n      { commentNodes }\n    </div>\n  );\n};\n\nCommentList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    author: PropTypes.string,\n    id: PropTypes.string,\n    text: PropTypes.string,\n    updatedAt: PropTypes.string,\n  })),\n  handleDeleteComment: PropTypes.func.isRequired,\n  handleUpdateComment: PropTypes.func.isRequired,\n};\n\nCommentList.defaultProps = {\n  data: [],\n};\n\nexport default CommentList;\n"]},"metadata":{},"sourceType":"module"}