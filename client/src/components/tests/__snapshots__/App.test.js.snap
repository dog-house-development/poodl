// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navbar tests render should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <BrowserRouter>
        <div
          className="App wrapper"
        >
          <Connect(withRouter(Navbar)) />
          <Route
            component={[Function]}
            exact={true}
            path="/"
          />
          <Route
            component={[Function]}
            exact={true}
            path="/register"
          />
          <Route
            component={[Function]}
            exact={true}
            path="/login"
          />
          <Switch>
            <Connect(PrivateRoute)
              component={[Function]}
              exact={true}
              path="/dashboard"
            />
          </Switch>
          <Footer />
        </div>
      </BrowserRouter>,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="App wrapper"
        >
          <Connect(withRouter(Navbar)) />
          <Route
            component={[Function]}
            exact={true}
            path="/"
          />
          <Route
            component={[Function]}
            exact={true}
            path="/register"
          />
          <Route
            component={[Function]}
            exact={true}
            path="/login"
          />
          <Switch>
            <Connect(PrivateRoute)
              component={[Function]}
              exact={true}
              path="/dashboard"
            />
          </Switch>
          <Footer />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Connect(withRouter(Navbar)) />,
            <Route
              component={[Function]}
              exact={true}
              path="/"
            />,
            <Route
              component={[Function]}
              exact={true}
              path="/register"
            />,
            <Route
              component={[Function]}
              exact={true}
              path="/login"
            />,
            <Switch>
              <Connect(PrivateRoute)
                component={[Function]}
                exact={true}
                path="/dashboard"
              />
            </Switch>,
            <Footer />,
          ],
          "className": "App wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/register",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/login",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Connect(PrivateRoute)
                component={[Function]}
                exact={true}
                path="/dashboard"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/dashboard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <BrowserRouter>
          <div
            className="App wrapper"
          >
            <Connect(withRouter(Navbar)) />
            <Route
              component={[Function]}
              exact={true}
              path="/"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/register"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/login"
            />
            <Switch>
              <Connect(PrivateRoute)
                component={[Function]}
                exact={true}
                path="/dashboard"
              />
            </Switch>
            <Footer />
          </div>
        </BrowserRouter>,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className="App wrapper"
          >
            <Connect(withRouter(Navbar)) />
            <Route
              component={[Function]}
              exact={true}
              path="/"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/register"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/login"
            />
            <Switch>
              <Connect(PrivateRoute)
                component={[Function]}
                exact={true}
                path="/dashboard"
              />
            </Switch>
            <Footer />
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Connect(withRouter(Navbar)) />,
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />,
              <Route
                component={[Function]}
                exact={true}
                path="/register"
              />,
              <Route
                component={[Function]}
                exact={true}
                path="/login"
              />,
              <Switch>
                <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/dashboard"
                />
              </Switch>,
              <Footer />,
            ],
            "className": "App wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/register",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/login",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Connect(PrivateRoute)
                  component={[Function]}
                  exact={true}
                  path="/dashboard"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/dashboard",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
