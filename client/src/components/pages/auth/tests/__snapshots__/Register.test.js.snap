// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Register tests render should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Register
    auth={
      Object {
        "isAuthenticated": false,
        "loading": false,
      }
    }
    errors={Object {}}
    history={
      Array [
        "/register",
      ]
    }
    registerAdmin={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/"
        >
          <i
            className="material-icons left"
          >
            keyboard_backspace
          </i>
           Back to home
        </Link>,
        <div>
          <h4>
            <b>
              Register
            </b>
             below
          </h4>
          <p>
            Already have an account? 
            <Link
              replace={false}
              to="/login"
            >
              Log in
            </Link>
          </p>
        </div>,
        <Form
          buttonLabel="Sign up"
          fields={
            Array [
              Object {
                "error": undefined,
                "id": "name",
                "label": "Name",
                "onChange": [Function],
                "placeholder": "Name...",
                "type": "text",
                "value": "Sam",
              },
              Object {
                "error": undefined,
                "id": "email",
                "label": "Email",
                "onChange": [Function],
                "placeholder": "Email...",
                "type": "email",
                "value": "sam@test.com",
              },
              Object {
                "error": undefined,
                "id": "password",
                "label": "Password",
                "onChange": [Function],
                "placeholder": "Password...",
                "type": "password",
                "value": "abc123",
              },
              Object {
                "error": undefined,
                "id": "password2",
                "label": "Confirm Password",
                "onChange": [Function],
                "placeholder": "Confirm password...",
                "type": "password",
                "value": "abc123",
              },
            ]
          }
          noValidate={true}
          onSubmit={[Function]}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <i
              className="material-icons left"
            >
              keyboard_backspace
            </i>,
            " Back to home",
          ],
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "keyboard_backspace",
              "className": "material-icons left",
            },
            "ref": null,
            "rendered": "keyboard_backspace",
            "type": "i",
          },
          " Back to home",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4>
              <b>
                Register
              </b>
               below
            </h4>,
            <p>
              Already have an account? 
              <Link
                replace={false}
                to="/login"
              >
                Log in
              </Link>
            </p>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <b>
                  Register
                </b>,
                " below",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Register",
                },
                "ref": null,
                "rendered": "Register",
                "type": "b",
              },
              " below",
            ],
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Already have an account? ",
                <Link
                  replace={false}
                  to="/login"
                >
                  Log in
                </Link>,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Already have an account? ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Log in",
                  "replace": false,
                  "to": "/login",
                },
                "ref": null,
                "rendered": "Log in",
                "type": [Function],
              },
            ],
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "buttonLabel": "Sign up",
          "fields": Array [
            Object {
              "error": undefined,
              "id": "name",
              "label": "Name",
              "onChange": [Function],
              "placeholder": "Name...",
              "type": "text",
              "value": "Sam",
            },
            Object {
              "error": undefined,
              "id": "email",
              "label": "Email",
              "onChange": [Function],
              "placeholder": "Email...",
              "type": "email",
              "value": "sam@test.com",
            },
            Object {
              "error": undefined,
              "id": "password",
              "label": "Password",
              "onChange": [Function],
              "placeholder": "Password...",
              "type": "password",
              "value": "abc123",
            },
            Object {
              "error": undefined,
              "id": "password2",
              "label": "Confirm Password",
              "onChange": [Function],
              "placeholder": "Confirm password...",
              "type": "password",
              "value": "abc123",
            },
          ],
          "noValidate": true,
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/"
          >
            <i
              className="material-icons left"
            >
              keyboard_backspace
            </i>
             Back to home
          </Link>,
          <div>
            <h4>
              <b>
                Register
              </b>
               below
            </h4>
            <p>
              Already have an account? 
              <Link
                replace={false}
                to="/login"
              >
                Log in
              </Link>
            </p>
          </div>,
          <Form
            buttonLabel="Sign up"
            fields={
              Array [
                Object {
                  "error": undefined,
                  "id": "name",
                  "label": "Name",
                  "onChange": [Function],
                  "placeholder": "Name...",
                  "type": "text",
                  "value": "Sam",
                },
                Object {
                  "error": undefined,
                  "id": "email",
                  "label": "Email",
                  "onChange": [Function],
                  "placeholder": "Email...",
                  "type": "email",
                  "value": "sam@test.com",
                },
                Object {
                  "error": undefined,
                  "id": "password",
                  "label": "Password",
                  "onChange": [Function],
                  "placeholder": "Password...",
                  "type": "password",
                  "value": "abc123",
                },
                Object {
                  "error": undefined,
                  "id": "password2",
                  "label": "Confirm Password",
                  "onChange": [Function],
                  "placeholder": "Confirm password...",
                  "type": "password",
                  "value": "abc123",
                },
              ]
            }
            noValidate={true}
            onSubmit={[Function]}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <i
                className="material-icons left"
              >
                keyboard_backspace
              </i>,
              " Back to home",
            ],
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "keyboard_backspace",
                "className": "material-icons left",
              },
              "ref": null,
              "rendered": "keyboard_backspace",
              "type": "i",
            },
            " Back to home",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4>
                <b>
                  Register
                </b>
                 below
              </h4>,
              <p>
                Already have an account? 
                <Link
                  replace={false}
                  to="/login"
                >
                  Log in
                </Link>
              </p>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <b>
                    Register
                  </b>,
                  " below",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Register",
                  },
                  "ref": null,
                  "rendered": "Register",
                  "type": "b",
                },
                " below",
              ],
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Already have an account? ",
                  <Link
                    replace={false}
                    to="/login"
                  >
                    Log in
                  </Link>,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Already have an account? ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Log in",
                    "replace": false,
                    "to": "/login",
                  },
                  "ref": null,
                  "rendered": "Log in",
                  "type": [Function],
                },
              ],
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "buttonLabel": "Sign up",
            "fields": Array [
              Object {
                "error": undefined,
                "id": "name",
                "label": "Name",
                "onChange": [Function],
                "placeholder": "Name...",
                "type": "text",
                "value": "Sam",
              },
              Object {
                "error": undefined,
                "id": "email",
                "label": "Email",
                "onChange": [Function],
                "placeholder": "Email...",
                "type": "email",
                "value": "sam@test.com",
              },
              Object {
                "error": undefined,
                "id": "password",
                "label": "Password",
                "onChange": [Function],
                "placeholder": "Password...",
                "type": "password",
                "value": "abc123",
              },
              Object {
                "error": undefined,
                "id": "password2",
                "label": "Confirm Password",
                "onChange": [Function],
                "placeholder": "Confirm password...",
                "type": "password",
                "value": "abc123",
              },
            ],
            "noValidate": true,
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
